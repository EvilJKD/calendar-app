{"version":3,"sources":["types/types.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","actions/events.js","components/calendar/CalendarModal.js","components/ui/FAB.js","components/ui/DeleteFAB.js","components/calendar/CalendarScreen.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","events","id","Date","getTime","title","start","moment","toDate","end","add","bgcolor","notes","user","_id","name","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","LoginScreen","className","placeholder","value","Navbar","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","uiOpenModal","eventClearActiveEvent","customStyles","content","top","left","right","bottom","marginRight","transform","zIndex","Modal","setAppElement","now","minutes","seconds","endDef","initEvent","CalendarModal","dispatch","useDispatch","useSelector","useState","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","handleInputChange","target","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","onSubmit","preventDefault","momentStart","momentEnd","isSameOrAfter","Swal","fire","trim","length","eventAddNew","onChange","minDate","autoComplete","rows","FAB","onClick","DeleteFAB","locale","localizer","momentLocalizer","CalendarScreen","localStorage","getItem","lastView","setlastView","startAccessor","endAccessor","height","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onSelectSlot","selectable","components","onDoubleClickEvent","onSelectEvent","onView","setItem","view","AppRouter","exact","path","component","to","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"oOAAaA,EAEI,kBAFJA,EAGK,mBAHLA,EAKO,qBALPA,EAMI,kBANJA,EAOc,6BAPdA,EAQI,wBARJA,EASI,wBCNXC,EAAe,CACjBC,OAAO,CAAC,CACJC,IAAI,IAAIC,MAAOC,UACfC,MAAO,mBACPC,MAAOC,MAASC,SAChBC,IAAKF,MAASG,IAAI,EAAE,SAASF,SAC7BG,QAAQ,UACRC,MAAO,qCAEPC,KAAK,CACDC,IAAK,UACLC,KAAM,UAGdC,YAAa,MCfXhB,EAAe,CACjBiB,WAAW,GCEFC,EAAcC,YAAgB,CACvCC,GDAqB,WAAmC,IAAlCC,EAAiC,uDAAzBrB,EAAcsB,EAAW,uCACvD,OAAOA,EAAOC,MACV,KAAKxB,EACD,OAAO,2BACAsB,GADP,IAEIJ,WAAW,IAGnB,KAAKlB,EACD,kCACOsB,GADP,IAEIJ,WAAW,IAGnB,QACI,OAAOI,ICdfG,SFc2B,WAAkC,IAAjCH,EAAgC,uDAAxBrB,EAAcsB,EAAU,uCAC5D,OAAQA,EAAOC,MACX,KAAKxB,EACD,kCACOsB,GADP,IAEIL,YAAaM,EAAOG,UAG5B,KAAK1B,EACD,kCACOsB,GADP,IAEIpB,OAAO,GAAD,mBACCoB,EAAMpB,QADP,CAEFqB,EAAOG,YAInB,KAAK1B,EACD,kCACOsB,GADP,IAEIL,YAAa,OAGrB,KAAKjB,EACD,kCACOsB,GADP,IAEIpB,OAAQoB,EAAMpB,OAAOyB,KACjB,SAAAC,GAAC,OAAKA,EAAEzB,KAAOoB,EAAOG,QAAQvB,GAAMoB,EAAOG,QAAUE,OAIjE,KAAK5B,EACG,kCACOsB,GADP,IAEIpB,OAAQoB,EAAMpB,OAAO2B,QACjB,SAAAD,GAAC,OAAKA,EAAEzB,KAAOmB,EAAML,YAAYd,MAErCc,YAAa,OAGzB,QACI,OAAOK,MGxDbQ,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAG9FC,EAAQC,YACjBhB,EACAW,EACIM,YAAgBC,O,8BCTXC,EAAc,WACvB,OACI,qBAAKC,UAAU,4BAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,yCACA,iCACI,qBAAKA,UAAU,aAAf,SACI,uBACIf,KAAK,OACLe,UAAU,eACVC,YAAY,aAGpB,qBAAKD,UAAU,aAAf,SACI,uBACIf,KAAK,WACLe,UAAU,eACVC,YAAY,oBAGpB,qBAAKD,UAAU,aAAf,SACI,uBACIf,KAAK,SACLe,UAAU,YACVE,MAAM,kBAMtB,sBAAKF,UAAU,wBAAf,UACI,0CACA,iCACI,qBAAKA,UAAU,aAAf,SACI,uBACIf,KAAK,OACLe,UAAU,eACVC,YAAY,aAGpB,qBAAKD,UAAU,aAAf,SACI,uBACIf,KAAK,QACLe,UAAU,eACVC,YAAY,aAGpB,qBAAKD,UAAU,aAAf,SACI,uBACIf,KAAK,WACLe,UAAU,eACVC,YAAY,oBAIpB,qBAAKD,UAAU,aAAf,SACI,uBACIf,KAAK,WACLe,UAAU,eACVC,YAAY,8BAIpB,qBAAKD,UAAU,aAAf,SACI,uBACIf,KAAK,SACLe,UAAU,YACVE,MAAM,+B,gBCrEzBC,G,MAAS,WAClB,OACI,sBAAKH,UAAU,kCAAf,UACI,sBAAMA,UAAU,eAAhB,kBAEA,yBAAQA,UAAU,yBAAlB,UACI,mBAAGA,UAAU,wBACb,mDCTHI,G,MAAW,CACpBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACNC,MAAO,SACPC,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,QCXNC,EAAgB,SAAC,GAAa,IAAZJ,EAAW,EAAXA,MACpBhD,EAAegD,EAAfhD,MAAOQ,EAAQwC,EAARxC,KAEd,OACI,gCACI,iCAASR,IACT,uCAAUQ,EAAKE,Y,2DCNd2C,EAAc,iBAAO,CAC9BnC,KAAKxB,ICUI4D,EAAwB,iBAAO,CAACpC,KAAMxB,ICD7C6D,EAAe,CACjBC,QAAU,CACRC,IAAwB,MACxBC,KAAwB,MACxBC,MAAwB,OACxBC,OAAwB,OACxBC,YAAwB,OACxBC,UAAwB,wBACxBC,OAAuB,MAI7BC,IAAMC,cAAc,SAEpB,IAAMC,EAAMhE,MAASiE,QAAQ,GAAGC,QAAQ,GAAG/D,IAAI,EAAE,SAC3CgE,EAASnE,MAASiE,QAAQ,GAAGC,QAAQ,GAAG/D,IAAI,EAAE,SAE9CiE,EAAY,CACdtE,MAAO,GACPO,MAAO,GACPN,MAAOiE,EAAI/D,SACXC,IAAKiE,EAAOlE,UAKHoE,EAAgB,WAEzB,IAAMC,EAAWC,cAEV7D,EAAa8D,aAAY,SAAA1D,GAAK,OAAIA,EAAMD,MAAxCH,UACAD,EAAe+D,aAAY,SAAA1D,GAAK,OAAIA,EAAMG,YAA1CR,YAEP,EAAkCgE,mBAAST,EAAI/D,UAA/C,mBAAOyE,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,mBAASN,EAAOlE,UAA9C,mBAAO2E,EAAP,KAAgBC,EAAhB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEA,EAAoCN,mBAASL,GAA7C,mBAAOY,EAAP,KAAmBC,EAAnB,KAEO5E,EAA4B2E,EAA5B3E,MAAOP,EAAqBkF,EAArBlF,MAAOC,EAAciF,EAAdjF,MAAOG,EAAO8E,EAAP9E,IAE5BgF,qBAAU,WAEFD,EADDxE,GAGe2D,KAEnB,CAAC3D,EAAawE,IAIjB,IAAME,EAAoB,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAExBH,EAAc,2BACPD,GADM,kBAERI,EAAO5E,KAAO4E,EAAOnD,UAIxBoD,EAAa,WACff,EFlE2B,CAC/BtD,KAAKxB,IEkED8E,EAASlB,KACT6B,EAAcb,IAwDlB,OACI,eAAC,IAAD,CACQkB,OAAQ5E,EAER6E,eAAgBF,EAChBG,MAAOnC,EACPoC,eAAgB,IAChB1D,UAAY,QACZ2D,iBAAkB,cAP1B,UAWQ,mCAAQjF,EAAc,eAAgB,cAAtC,OACA,uBACA,uBACIsB,UAAU,YACV4D,SApDS,SAACvE,GACtBA,EAAEwE,iBAEF,IAAMC,EAAc7F,IAAOD,GACrB+F,EAAY9F,IAAOE,GAEzB,OAAG2F,EAAYE,cAAcD,GAClBE,IAAKC,KAAK,QAAS,gDAAiD,SAG5EnG,EAAMoG,OAAOC,OAAS,EACdpB,GAAc,IAIrBT,EADD7D,ED7F4B,CACnCO,KAAMxB,EACN0B,QC4F6B8D,GD1GN,SAAClC,GAAD,MAAY,CACnC9B,KAAMxB,EACN0B,QAAS4B,GC4GIsD,CAAY,2BACdpB,GADa,IAEhBrF,IAAI,IAAIC,MAAOC,UACfS,KAAM,CACFC,IAAK,IACLC,KAAM,YAMduE,GAAc,QAEdM,MAkBQ,UAKI,sBAAKtD,UAAU,aAAf,UACI,wDACA,cAAC,IAAD,CACIsE,SA1EM,SAACjF,GAC3BuD,EAAavD,GACb6D,EAAc,2BACPD,GADM,IAETjF,MAAOqB,MAuESa,MAAOyC,EACP3C,UAAY,oBAIpB,sBAAKA,UAAU,aAAf,UACI,qDACA,cAAC,IAAD,CACIsE,SA3EI,SAACjF,GACzByD,EAAWzD,GACX6D,EAAc,2BACPD,GADM,IAET9E,IAAKkB,MAwEWa,MAAO2C,EACP0B,QAAW5B,EACX3C,UAAY,oBAIpB,uBACA,sBAAKA,UAAU,aAAf,UACI,mDACA,uBACIf,KAAK,OACLe,UAAS,wBAAoB+C,GAAc,cAC3C9C,YAAY,uBACZxB,KAAK,QACL+F,aAAa,MACbtE,MAAUnC,EACVuG,SAAYlB,IAEhB,uBAAOxF,GAAG,YAAYoC,UAAU,uBAAhC,yCAGJ,sBAAKA,UAAU,aAAf,UACI,0BACIf,KAAK,OACLe,UAAU,eACVC,YAAY,QACZwE,KAAK,IACLhG,KAAK,QACLyB,MAAU5B,EACVgG,SAAYlB,IAEhB,uBAAOxF,GAAG,YAAYoC,UAAU,uBAAhC,yCAGJ,yBACIf,KAAK,SACLe,UAAU,oCAFd,UAII,mBAAGA,UAAU,gBACb,sDCrMX0E,EAAM,WAEf,IAAMnC,EAAWC,cAMjB,OACI,wBACIxC,UAAU,sBACV2E,QAPe,WACnBpC,EAASnB,MAIT,SAII,mBAAGpB,UAAU,mBCbZ4E,EAAY,WAErB,IAAMrC,EAAWC,cAMjB,OACI,yBACIxC,UAAU,4BACV2E,QAPa,WACjBpC,EHW0B,CAACtD,KAAMxB,KGPjC,UAII,mBAAGuC,UAAU,iBACb,+CCIZ/B,IAAO4G,OAAO,MAEd,IAAMC,EAAYC,YAAgB9G,KAGrB+G,EAAiB,WAE1B,IAAMzC,EAAWC,cAEjB,EAA8BC,aAAY,SAAA1D,GAAK,OAAIA,EAAMG,YAAlDvB,EAAP,EAAOA,OAAQe,EAAf,EAAeA,YAEf,EAAgCgE,mBAASuC,aAAaC,QAAQ,aAAgB,SAA9E,mBAAOC,EAAP,KAAiBC,EAAjB,KAqCA,OACI,sBAAKpF,UAAU,kBAAf,UACI,cAAC,EAAD,IAGA,cAAC,IAAD,CACI8E,UAAWA,EACXnH,OAAQA,EACR0H,cAAc,QACdC,YAAY,MACZ7B,MAAO,CAAE8B,OAAQ,KACjBnF,SAAUA,EACVoF,gBA1BY,SAACzE,EAAO/C,EAAOG,EAAKsH,GASxC,MAAM,CACFhC,MATQ,CACRiC,gBAAiB,UACjBC,aAAc,MACdC,QAAS,GACTC,QAAS,QACTC,MAAO,WAqBHC,aA/BS,SAAC1G,GAClBkD,EAASlB,MA+BD2E,YAAc,EACdC,WAAY,CACRlF,MAAOI,GAEX+E,mBArDU,SAAC7G,GAEnBkD,EAASnB,MAoDD+E,cAhDU,SAAC9G,GAEnBkD,EJnCkC,CACtCtD,KAAMxB,EACN0B,QIiC4BE,KA+ChB+G,OA3CU,SAAC/G,GACnB+F,EAAY/F,GACZ4F,aAAaoB,QAAQ,WAAYhH,IA0CzBiH,KAAQnB,IAGZ,cAAC,EAAD,IAGKzG,GAAgB,cAAC,EAAD,IAIrB,cAAC,EAAD,QCxFC6H,EAAY,WACrB,OACI,cAAC,IAAD,UACK,8BACG,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAW3G,IACtC,cAAC,IAAD,CAAOyG,OAAK,EAACC,KAAK,IAAIC,UAAW1B,IAGjC,cAAC,IAAD,CAAU2B,GAAG,cCfpBC,EAAc,WACvB,OACI,cAAC,IAAD,CAAUjH,MAAOA,EAAjB,SACI,cAAC,EAAD,O,OCJZkH,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.0abdad75.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdate: '[event] Event updated',\r\n    eventDelete: '[event] Event deleted',\r\n\r\n\r\n}","import moment from 'moment';\r\nimport { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    events:[{\r\n        id: new Date().getTime(),\r\n        title: 'Fin de Semestre!',\r\n        start: moment().toDate(),\r\n        end: moment().add(2,'hours').toDate(),\r\n        bgcolor:'#fafafa',\r\n        notes: 'Tocara unas cervezas para festejar',\r\n\r\n        user:{\r\n            _id: 'Usuario',\r\n            name: 'DAGE'\r\n        }\r\n    }],\r\n    activeEvent: null\r\n};\r\n\r\n\r\nexport const calendarReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return{\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        \r\n        case types.eventAddNew:\r\n            return{\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n    \r\n        case types.eventClearActiveEvent:\r\n            return{\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdate:\r\n            return{\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.eventDelete:\r\n                return{\r\n                    ...state,\r\n                    events: state.events.filter(\r\n                        e => (e.id !== state.activeEvent.id)\r\n                    ),\r\n                    activeEvent: null\r\n                }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers} from 'redux';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer\r\n})","import { createStore, compose, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nimport { rootReducer } from '../reducers/rootReducers';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import React from 'react';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">DAGE</span>\r\n        \r\n            <button className=\"btn btn-outline-danger\">\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Logout</span>\r\n            </button>\r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const {title, user} = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span> - {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type:types.uiOpenModal,\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type:types.uiCloseModal,\r\n})","import { types } from \"../types/types\"\r\n\r\n\r\nexport const eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({type: types.eventClearActiveEvent})\r\n\r\nexport const eventUpdate = (event) => ({\r\n    type: types.eventUpdate,\r\n    payload: event\r\n})\r\n\r\nexport const eventDelete = () => ({type: types.eventDelete})","import React, { useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\n\r\nimport moment from 'moment'\r\n/*Componentes*/\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventAddNew, eventClearActiveEvent, eventUpdate } from '../../actions/events';\r\n\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      zIndex               : 150\r\n    }\r\n  };\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\r\nconst endDef = moment().minutes(0).seconds(0).add(2,'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: endDef.toDate()\r\n}\r\n\r\n\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {modalOpen} = useSelector(state => state.ui)\r\n    const {activeEvent} = useSelector(state => state.calendar)\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(endDef.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const {notes, title, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setFormValues(activeEvent);\r\n        }else{\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n\r\n\r\n    const handleInputChange = ({target}) =>{\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n        \r\n    };\r\n\r\n    const handleStartDateChange = (e) =>{\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha inicio', 'error');\r\n        }\r\n\r\n        if(title.trim().length < 2){\r\n            return setTitleValid(false); \r\n        }\r\n\r\n        if(activeEvent){\r\n            dispatch(eventUpdate(formValues))\r\n        }\r\n        else{\r\n\r\n        dispatch(eventAddNew({\r\n            ...formValues,\r\n            id: new Date().getTime(),\r\n            user: {\r\n                _id: '1',\r\n                name: 'DAGE'\r\n            }\r\n        }))\r\n\r\n        }\r\n        \r\n        setTitleValid(true);\r\n        \r\n        closeModal();\r\n        \r\n    }\r\n\r\n    return (\r\n        <Modal\r\n                isOpen={modalOpen}\r\n                //onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                closeTimeoutMS={200}\r\n                className = \"modal\"\r\n                overlayClassName =\"modal-fondo\"\r\n                >\r\n                \r\n                {/*Contenido de la ventana modal*/}\r\n                <h1> { (activeEvent)? 'Editar Tarea': 'Nueva Tarea'} </h1>\r\n                <hr />\r\n                <form \r\n                    className=\"container\"\r\n                    onSubmit = {handleSubmitForm}\r\n                    >\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora inicio</label>\r\n                        <DateTimePicker\r\n                            onChange={handleStartDateChange}\r\n                            value={dateStart}\r\n                            className = \"form-control\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora fin</label>\r\n                        <DateTimePicker\r\n                            onChange={handleEndDateChange}\r\n                            value={dateEnd}\r\n                            minDate = {dateStart}\r\n                            className = \"form-control\"\r\n                        />\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <div className=\"form-group\">\r\n                        <label>Titulo y notas</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className={`form-control ${ !titleValid && 'is-invalid'}`}\r\n                            placeholder=\"Título del evento\"\r\n                            name=\"title\"\r\n                            autoComplete=\"off\"\r\n                            value = { title }\r\n                            onChange = {handleInputChange}\r\n                        />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <textarea \r\n                            type=\"text\" \r\n                            className=\"form-control\"\r\n                            placeholder=\"Notas\"\r\n                            rows=\"5\"\r\n                            name=\"notes\"\r\n                            value = { notes }\r\n                            onChange = {handleInputChange}\r\n                        ></textarea>\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                    </div>\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-outline-primary btn-block\"\r\n                    >\r\n                        <i className=\"far fa-save\"></i>\r\n                        <span> Guardar</span>\r\n                    </button>\r\n\r\n                </form>\r\n        </Modal>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\n\r\nexport const FAB = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClickNew = () =>{\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClickNew}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n\r\n\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventDelete } from '../../actions/events';\r\n\r\nexport const DeleteFAB = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventDelete());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar</span>\r\n\r\n        </button>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport 'moment/locale/es'; {/*Importancion del lenguaje espanol, de la clase moment*/}\r\n\r\n{/*NavBar que va como header*/}\r\nimport { Navbar } from '../ui/Navbar';\r\n\r\n{/*CSS del componente Big Calendar - Para darle estilos*/}\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\n{/*Objeto messages, para cambiar el idioma de los textos*/}\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventAddNew, eventClearActiveEvent, eventSetActive } from '../../actions/events';\r\nimport { FAB } from '../ui/FAB';\r\nimport { DeleteFAB } from '../ui/DeleteFAB';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {events, activeEvent} = useSelector(state => state.calendar)\r\n\r\n    const [lastView, setlastView] = useState(localStorage.getItem('lastView')  || 'month');\r\n\r\n    const onDoubleClick = (e) =>{\r\n\r\n        dispatch(uiOpenModal());\r\n\r\n    };\r\n\r\n    const onSelectEvent = (e) => {\r\n\r\n        dispatch(eventSetActive(e));\r\n\r\n    };\r\n\r\n    const onViewChanged = (e) => {\r\n        setlastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    };\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter =(event, start, end, isSelected) =>{\r\n        const style={\r\n            backgroundColor: '#367CF7',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return{\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar/>\r\n\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                style={{ height: 500 }}\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable = {true}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                onDoubleClickEvent = {onDoubleClick}\r\n                onSelectEvent = {onSelectEvent}\r\n                onView = {onViewChanged}\r\n                view = {lastView}\r\n            />\r\n\r\n            <FAB />  \r\n\r\n            {\r\n                (activeEvent) && <DeleteFAB/>\r\n            }\r\n            \r\n\r\n            <CalendarModal />\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\n  \r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <Router>\r\n             <div>\r\n                <Switch>\r\n                    {/*Direccionamiento dependiendo de la direccion URL*/}\r\n                    <Route exact path=\"/login\" component={LoginScreen}/>\r\n                    <Route exact path=\"/\" component={CalendarScreen}/>\r\n                    \r\n                    {/*Redireccionamiento, en caso de que la direccion ingresada no concuerde con los paths establecidos*/}\r\n                    <Redirect to='/'/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Provider} from 'react-redux';\r\n\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter'\r\n\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\n\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}